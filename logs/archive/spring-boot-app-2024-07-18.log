2024-07-18 15:08:57 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 15140 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:08:57 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 346 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 4 JPA repository interfaces.
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:08:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:09:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:09:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:09:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:09:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:09:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:09:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:09:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2024-07-18 15:09:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:09:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:09:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:09:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:09:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5121 ms
2024-07-18 15:09:02 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:09:03 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:09:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:09:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41b66d1
2024-07-18 15:09:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:09:07 [main] DEBUG org.hibernate.SQL - alter table categories add column created_at datetime(6)
2024-07-18 15:09:08 [main] DEBUG org.hibernate.SQL - alter table categories add column updated_at datetime(6)
2024-07-18 15:09:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:09:10 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:09:10 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:09:10 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:09:10 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:09:11 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:09:11 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:09:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:09:12 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:09:12 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:09:12 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@71c1ba6d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50f6eb17, org.springframework.security.web.context.SecurityContextHolderFilter@1b261005, org.springframework.security.web.header.HeaderWriterFilter@de4bee9, org.springframework.web.filter.CorsFilter@6a567f7b, org.springframework.security.web.authentication.logout.LogoutFilter@283eb984, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@447dec7e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@55704859, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@686a08f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7bc3e36b, org.springframework.security.web.access.ExceptionTranslationFilter@4a9d0c6f, org.springframework.security.web.access.intercept.AuthorizationFilter@fe739e7]
2024-07-18 15:09:12 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:09:12 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:09:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:09:12 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 16.387 seconds (process running for 18.068)
2024-07-18 15:09:13 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:09:21 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:09:21 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:09:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:09:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:09:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7a6cab6f
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@31360632
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:09:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:09:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:09:36 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:09:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:09:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@4215a842]
2024-07-18 15:09:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:09:36 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry 'fan' for key 'categories.UKt8o6pivur7nn124jehx7cygw5'
2024-07-18 15:09:36 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingAppException(AppException)
2024-07-18 15:09:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:09:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=325, message=Category name or slug existed, result=null)]
2024-07-18 15:09:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.manage.userManagement.exception.AppException: Category name or slug existed]
2024-07-18 15:09:37 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@2fd69537]
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoSuchMethodError: 'java.time.LocalDateTime com.manage.userManagement.entity.Category.getCreateAt()'
2024-07-18 15:09:49 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoSuchMethodError: 'java.time.LocalDateTime com.manage.userManagement.entity.Category.getCreateAt()'] with root cause
java.lang.NoSuchMethodError: 'java.time.LocalDateTime com.manage.userManagement.entity.Category.getCreateAt()'
	at com.manage.userManagement.mapper.CategoryMapperImpl.toCategoryResponse(CategoryMapperImpl.java:43)
	at com.manage.userManagement.service.CategoryService.createCategory(CategoryService.java:33)
	at com.manage.userManagement.controller.CategoryController.addCategory(CategoryController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter.doFilterInternal(BearerTokenAuthenticationFilter.java:145)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Jul 18 15:09:49 GMT+07:00 2024, status=500, error=Internal Server Error, path=/catego (truncated)...]
2024-07-18 15:09:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2024-07-18 15:11:23 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:11:23 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:11:23 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:11:23 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:11:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:11:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:11:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:17:18 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 14660 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:17:18 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 225 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 4 JPA repository interfaces.
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:17:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 15:17:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:17:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:17:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:17:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:17:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3433 ms
2024-07-18 15:17:22 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:17:23 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:17:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:17:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@64508788
2024-07-18 15:17:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:17:26 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:17:27 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:17:27 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:17:27 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:17:27 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:17:28 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:17:28 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:17:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:17:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:17:29 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:17:29 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@67387eba, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20b1f874, org.springframework.security.web.context.SecurityContextHolderFilter@5415ed48, org.springframework.security.web.header.HeaderWriterFilter@5e6d2502, org.springframework.web.filter.CorsFilter@7c71c889, org.springframework.security.web.authentication.logout.LogoutFilter@4ab4b4cd, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@113886b1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e7e4aea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28908c04, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7569efdd, org.springframework.security.web.access.ExceptionTranslationFilter@4df4f611, org.springframework.security.web.access.intercept.AuthorizationFilter@4af44e42]
2024-07-18 15:17:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:17:29 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:17:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:17:30 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 12.111 seconds (process running for 13.483)
2024-07-18 15:17:30 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:17:33 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:17:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@fbb39ea
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@374d3128
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:17:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:17:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:17:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:17:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:17:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:17:34 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@33815f89]
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:17:50 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry 'fancy' for key 'categories.UKt8o6pivur7nn124jehx7cygw5'
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingAppException(AppException)
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=325, message=Category name or slug existed, result=null)]
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.manage.userManagement.exception.AppException: Category name or slug existed]
2024-07-18 15:17:50 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 15:18:10 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/categories/book", parameters={}
2024-07-18 15:18:10 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#getCategory(String)
2024-07-18 15:18:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.is_active,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.slug=?
2024-07-18 15:18:10 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:18:10 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@4 (truncated)...]
2024-07-18 15:18:10 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:18:20 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/categories/fancy", parameters={}
2024-07-18 15:18:20 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#getCategory(String)
2024-07-18 15:18:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.is_active,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.slug=?
2024-07-18 15:18:20 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:18:20 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@2 (truncated)...]
2024-07-18 15:18:20 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:18:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/categories", parameters={}
2024-07-18 15:18:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#getAll()
2024-07-18 15:18:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.is_active,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0
2024-07-18 15:18:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:18:43 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=[com.manage.userManagement.dto.response.CategoryResponse@ (truncated)...]
2024-07-18 15:18:43 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:19:01 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:19:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:19:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@475a47e0]
2024-07-18 15:19:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:19:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:19:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@4 (truncated)...]
2024-07-18 15:19:01 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:19:50 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:20:01 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:20:01 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:20:01 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@c825904]
2024-07-18 15:20:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:20:01 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:20:01 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@7 (truncated)...]
2024-07-18 15:20:01 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:25:57 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:25:57 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:25:57 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:25:57 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:25:57 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:25:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:25:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:28:42 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 2264 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:28:42 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 263 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 4 JPA repository interfaces.
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2024-07-18 15:28:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:28:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:28:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:28:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:28:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3523 ms
2024-07-18 15:28:46 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:28:47 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:28:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:28:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1987807b
2024-07-18 15:28:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:28:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:28:51 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:28:51 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:28:51 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:28:51 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:28:51 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:28:51 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:28:52 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:28:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:28:52 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:28:52 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@38ce90b4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76fece79, org.springframework.security.web.context.SecurityContextHolderFilter@3564caf8, org.springframework.security.web.header.HeaderWriterFilter@652a16a8, org.springframework.web.filter.CorsFilter@2c47a053, org.springframework.security.web.authentication.logout.LogoutFilter@7bce016c, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@53ed864c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3dabf112, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1569f8a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@491ef90c, org.springframework.security.web.access.ExceptionTranslationFilter@6b50017c, org.springframework.security.web.access.intercept.AuthorizationFilter@20b1f874]
2024-07-18 15:28:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:28:52 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:28:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:28:53 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.162 seconds (process running for 12.42)
2024-07-18 15:28:53 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:28:59 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:28:59 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1cc07127
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1b7bab7e
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:28:59 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:28:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:29:00 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:29:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:29:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:29:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:29:00 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:29:00 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:29:00 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@13da4fae]
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:29:20 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry 'cook' for key 'categories.UKt8o6pivur7nn124jehx7cygw5'
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingAppException(AppException)
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=325, message=Category name or slug existed, result=null)]
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.manage.userManagement.exception.AppException: Category name or slug existed]
2024-07-18 15:29:20 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 15:29:27 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:29:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:29:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@109539ef]
2024-07-18 15:29:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:29:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:29:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@6 (truncated)...]
2024-07-18 15:29:27 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:31:54 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:32:03 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:32:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:32:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@7e9f84d6]
2024-07-18 15:32:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:32:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:32:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@2 (truncated)...]
2024-07-18 15:32:03 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:32:35 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:32:35 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:32:35 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:32:35 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:32:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:32:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:32:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:33:50 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 1572 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:33:50 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 221 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 4 JPA repository interfaces.
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:33:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 15:33:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:33:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:33:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:33:53 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:33:53 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3164 ms
2024-07-18 15:33:53 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:33:54 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:33:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:33:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3beaa16d
2024-07-18 15:33:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - create table categories (id integer not null auto_increment, created_at datetime(6), description varchar(255), is_active BOOLEAN DEFAULT TRUE, name varchar(255) not null, slug varchar(255) not null, updated_at datetime(6), primary key (id)) engine=InnoDB
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - create table products (id integer not null auto_increment, brand varchar(255), create_at datetime(6), description varchar(255), is_active bit not null, is_bestseller bit not null, is_feature bit not null, name varchar(255), price float(23) not null, quantity integer not null, sku varchar(255), slug varchar(255), update_at datetime(6), category_id integer, primary key (id)) engine=InnoDB
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table categories drop index UKt8o6pivur7nn124jehx7cygw5
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table categories add constraint UKt8o6pivur7nn124jehx7cygw5 unique (name)
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table categories drop index UKoul14ho7bctbefv8jywp5v3i2
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table categories add constraint UKoul14ho7bctbefv8jywp5v3i2 unique (slug)
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table products drop index UKo61fmio5yukmmiqgnxf8pnavn
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKo61fmio5yukmmiqgnxf8pnavn unique (name)
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table products drop index UKostq1ec3toafnjok09y9l7dox
2024-07-18 15:33:56 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKostq1ec3toafnjok09y9l7dox unique (slug)
2024-07-18 15:33:57 [main] DEBUG org.hibernate.SQL - alter table products add constraint FKog2rp4qthbtt2lfyhfo32lsw9 foreign key (category_id) references categories (id)
2024-07-18 15:33:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:33:58 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:33:58 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:33:58 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:33:58 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:33:59 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:33:59 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:33:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:34:00 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:34:00 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:34:00 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@46030cfd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41019971, org.springframework.security.web.context.SecurityContextHolderFilter@5f19da2c, org.springframework.security.web.header.HeaderWriterFilter@5e1fc897, org.springframework.web.filter.CorsFilter@649b5891, org.springframework.security.web.authentication.logout.LogoutFilter@104861ff, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@2d4c9746, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15f4f652, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@153f6a67, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@83ec0b0, org.springframework.security.web.access.ExceptionTranslationFilter@2d198533, org.springframework.security.web.access.intercept.AuthorizationFilter@11932248]
2024-07-18 15:34:00 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:34:00 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:34:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:34:01 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.574 seconds (process running for 12.885)
2024-07-18 15:34:01 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:34:05 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:34:05 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@136cd71b
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2a87d40f
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:34:05 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:34:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:34:14 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:34:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:34:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@73f05f5f]
2024-07-18 15:34:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:34:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:34:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@6 (truncated)...]
2024-07-18 15:34:14 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:38:27 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:38:28 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:38:28 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:38:28 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:38:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:38:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:38:36 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 6096 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:38:36 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 260 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 4 JPA repository interfaces.
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 15:38:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:38:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:38:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:38:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:38:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3475 ms
2024-07-18 15:38:40 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:38:41 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:38:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:38:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6315bb4
2024-07-18 15:38:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:38:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:38:45 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:38:45 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:38:45 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:38:45 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:38:46 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:38:46 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:38:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:38:46 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:38:46 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:38:47 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5989f463, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27cc84a2, org.springframework.security.web.context.SecurityContextHolderFilter@6ec3c680, org.springframework.security.web.header.HeaderWriterFilter@15f4f652, org.springframework.web.filter.CorsFilter@204d9edf, org.springframework.security.web.authentication.logout.LogoutFilter@7d9f0cf4, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@4ab4b4cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46110b82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@460818c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48b14e4a, org.springframework.security.web.access.ExceptionTranslationFilter@5f19da2c, org.springframework.security.web.access.intercept.AuthorizationFilter@28de7e2e]
2024-07-18 15:38:47 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:38:47 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:38:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:38:47 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.866 seconds (process running for 13.155)
2024-07-18 15:38:47 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:39:04 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:39:04 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:39:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:39:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:39:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:39:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@d181ca3
2024-07-18 15:39:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6eb58fdd
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:39:05 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:39:05 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:39:17 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:39:17 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:39:17 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@aa85952]
2024-07-18 15:39:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:39:17 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:39:17 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@5 (truncated)...]
2024-07-18 15:39:17 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:39:33 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:39:33 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:39:33 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:39:33 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:39:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:39:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:41:37 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 3840 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:41:37 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 253 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 4 JPA repository interfaces.
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:41:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2024-07-18 15:41:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:41:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:41:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:41:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:41:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3277 ms
2024-07-18 15:41:41 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:41:41 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:41:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:41:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49153009
2024-07-18 15:41:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:41:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:41:46 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:41:46 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:41:46 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:41:46 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:41:46 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:41:46 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:41:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:41:47 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:41:47 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:41:47 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3b33b54e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ea4e0f3, org.springframework.security.web.context.SecurityContextHolderFilter@46916d68, org.springframework.security.web.header.HeaderWriterFilter@13258770, org.springframework.web.filter.CorsFilter@7a3f08b6, org.springframework.security.web.authentication.logout.LogoutFilter@10658b31, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@72a80415, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ad31e9e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@129204bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c9ecd9e, org.springframework.security.web.access.ExceptionTranslationFilter@7e32261f, org.springframework.security.web.access.intercept.AuthorizationFilter@7b78c40d]
2024-07-18 15:41:47 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:41:47 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:41:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:41:48 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.245 seconds (process running for 12.349)
2024-07-18 15:41:48 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:41:53 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:41:53 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:41:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:41:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:41:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:41:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7b1466e3
2024-07-18 15:41:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@280b9922
2024-07-18 15:41:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:41:53 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 15:41:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@6d62d356]
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:42:02 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry 'cooi' for key 'categories.UKt8o6pivur7nn124jehx7cygw5'
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingAppException(AppException)
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=325, message=Category name or slug existed, result=null)]
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.manage.userManagement.exception.AppException: Category name or slug existed]
2024-07-18 15:42:02 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 15:42:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:42:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:42:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@26d47d67]
2024-07-18 15:42:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:42:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:42:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@3 (truncated)...]
2024-07-18 15:42:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:42:40 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:42:40 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:42:40 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@735d9ef1]
2024-07-18 15:42:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:42:40 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:42:40 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@5 (truncated)...]
2024-07-18 15:42:40 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:45:21 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:45:21 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:45:21 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:45:21 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:45:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:45:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:45:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:45:27 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 14688 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:45:27 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 235 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 4 JPA repository interfaces.
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:45:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-18 15:45:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:45:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:45:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:45:31 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:45:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3330 ms
2024-07-18 15:45:31 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:45:31 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:45:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:45:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@47f0e078
2024-07-18 15:45:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:45:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:45:36 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:45:36 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:45:36 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:45:36 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:45:37 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:45:37 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:45:37 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:45:37 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:45:37 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:45:37 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@46030cfd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41019971, org.springframework.security.web.context.SecurityContextHolderFilter@5f19da2c, org.springframework.security.web.header.HeaderWriterFilter@5e1fc897, org.springframework.web.filter.CorsFilter@53a301f3, org.springframework.security.web.authentication.logout.LogoutFilter@104861ff, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@2d4c9746, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15f4f652, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@153f6a67, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@83ec0b0, org.springframework.security.web.access.ExceptionTranslationFilter@2d198533, org.springframework.security.web.access.intercept.AuthorizationFilter@11932248]
2024-07-18 15:45:37 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:45:37 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:45:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:45:38 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.341 seconds (process running for 12.467)
2024-07-18 15:45:38 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:45:46 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:45:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:45:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:45:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:45:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:45:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@136cd71b
2024-07-18 15:45:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2a87d40f
2024-07-18 15:45:46 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:45:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 15:45:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:45:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:45:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@75d014]
2024-07-18 15:45:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:45:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:45:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@3 (truncated)...]
2024-07-18 15:45:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:46:06 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:46:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:46:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@13234fec]
2024-07-18 15:46:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:46:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:46:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@3 (truncated)...]
2024-07-18 15:46:06 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:46:34 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:46:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:46:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@7bdc84d]
2024-07-18 15:46:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:46:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:46:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@2 (truncated)...]
2024-07-18 15:46:34 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@fc51151]
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:46:50 [http-nio-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry 'nieus' for key 'categories.UKt8o6pivur7nn124jehx7cygw5'
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingAppException(AppException)
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=325, message=Category name or slug existed, result=null)]
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.manage.userManagement.exception.AppException: Category name or slug existed]
2024-07-18 15:46:50 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 15:46:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:46:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:46:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@26d47d67]
2024-07-18 15:46:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:46:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:46:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@d (truncated)...]
2024-07-18 15:46:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@669bc674]
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:47:37 [http-nio-8080-exec-8] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Table 'userManagement.categories' doesn't exist
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["could not execute statement [Table 'userManagement.categories' doesn't exist] [insert into categorie (truncated)..."]
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement [Table 'userManagement.categories' doesn't exist] [insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)]; SQL [insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)]]
2024-07-18 15:47:37 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 15:47:42 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:47:42 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:47:42 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:47:42 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:47:42 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:47:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:47:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:47:46 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 13040 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:47:46 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:47:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:47:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:47:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:47:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:47:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:47:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 211 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 4 JPA repository interfaces.
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:47:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2024-07-18 15:47:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:47:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:47:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:47:49 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:47:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3229 ms
2024-07-18 15:47:49 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:47:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:47:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:47:51 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2db3675a
2024-07-18 15:47:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - create table categories (id integer not null auto_increment, created_at datetime(6), description varchar(255), is_active bit not null, name varchar(255) not null, slug varchar(255) not null, updated_at datetime(6), primary key (id)) engine=InnoDB
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - create table products (id integer not null auto_increment, brand varchar(255), create_at datetime(6), description varchar(255), is_active bit not null, is_bestseller bit not null, is_feature bit not null, name varchar(255), price float(23) not null, quantity integer not null, sku varchar(255), slug varchar(255), update_at datetime(6), category_id integer, primary key (id)) engine=InnoDB
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table categories drop index UKt8o6pivur7nn124jehx7cygw5
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table categories add constraint UKt8o6pivur7nn124jehx7cygw5 unique (name)
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table categories drop index UKoul14ho7bctbefv8jywp5v3i2
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table categories add constraint UKoul14ho7bctbefv8jywp5v3i2 unique (slug)
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table products drop index UKo61fmio5yukmmiqgnxf8pnavn
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKo61fmio5yukmmiqgnxf8pnavn unique (name)
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table products drop index UKostq1ec3toafnjok09y9l7dox
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKostq1ec3toafnjok09y9l7dox unique (slug)
2024-07-18 15:47:53 [main] DEBUG org.hibernate.SQL - alter table products add constraint FKog2rp4qthbtt2lfyhfo32lsw9 foreign key (category_id) references categories (id)
2024-07-18 15:47:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:47:55 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:47:55 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:47:55 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:47:55 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:47:55 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:47:56 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:47:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:47:56 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:47:56 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:47:56 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@633332e2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@591e3e5e, org.springframework.security.web.context.SecurityContextHolderFilter@5c00b341, org.springframework.security.web.header.HeaderWriterFilter@3e7e4aea, org.springframework.web.filter.CorsFilter@1eb9bf60, org.springframework.security.web.authentication.logout.LogoutFilter@2db618e3, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@68076f57, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72ce2982, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@652a16a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@a308ffd, org.springframework.security.web.access.ExceptionTranslationFilter@5415ed48, org.springframework.security.web.access.intercept.AuthorizationFilter@3f41a7ab]
2024-07-18 15:47:56 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:47:56 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:47:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:47:57 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.636 seconds (process running for 12.868)
2024-07-18 15:47:57 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:48:02 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:48:02 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5e5d41dc
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3fc378f2
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:48:02 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@388808aa]
2024-07-18 15:48:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:48:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:48:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@3 (truncated)...]
2024-07-18 15:48:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:52:30 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:52:30 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:52:30 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:52:30 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:52:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:52:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:52:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:52:36 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 14104 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:52:36 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 255 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 4 JPA repository interfaces.
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:52:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2024-07-18 15:52:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:52:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:52:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:52:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:52:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3436 ms
2024-07-18 15:52:40 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:52:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:52:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:52:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4738131e
2024-07-18 15:52:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:52:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:52:45 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:52:45 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:52:45 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:52:45 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:52:45 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:52:46 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:52:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:52:46 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:52:46 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:52:46 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@37a522c8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ab80ea, org.springframework.security.web.context.SecurityContextHolderFilter@7c7caff1, org.springframework.security.web.header.HeaderWriterFilter@5b3c2e59, org.springframework.web.filter.CorsFilter@42d9e8d2, org.springframework.security.web.authentication.logout.LogoutFilter@72a80415, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@27cd156a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3669d7ac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64d711b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4982b310, org.springframework.security.web.access.ExceptionTranslationFilter@76300346, org.springframework.security.web.access.intercept.AuthorizationFilter@3ec72844]
2024-07-18 15:52:46 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:52:46 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:52:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:52:47 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.585 seconds (process running for 12.74)
2024-07-18 15:52:47 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:52:55 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:52:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:52:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:52:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:52:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:52:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2079ce51
2024-07-18 15:52:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@138f597
2024-07-18 15:52:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:52:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 15:52:56 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:52:56 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:52:56 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@3984843c]
2024-07-18 15:52:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:52:56 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:52:56 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@1 (truncated)...]
2024-07-18 15:52:56 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:53:12 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:53:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:53:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@13234fec]
2024-07-18 15:53:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:53:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:53:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@3 (truncated)...]
2024-07-18 15:53:12 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:54:01 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:54:01 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:54:01 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:54:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:54:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:54:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 15:54:07 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 10936 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 15:54:07 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 240 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 4 JPA repository interfaces.
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 15:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 15:54:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 15:54:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 15:54:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 15:54:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 15:54:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3244 ms
2024-07-18 15:54:10 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 15:54:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 15:54:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 15:54:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7ca0166c
2024-07-18 15:54:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 15:54:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:54:15 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 15:54:15 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 15:54:15 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 15:54:15 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 15:54:16 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:54:16 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 15:54:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 15:54:16 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 15:54:16 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 15:54:17 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7820a19d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a2173cd, org.springframework.security.web.context.SecurityContextHolderFilter@153f6a67, org.springframework.security.web.header.HeaderWriterFilter@46110b82, org.springframework.web.filter.CorsFilter@35f7969d, org.springframework.security.web.authentication.logout.LogoutFilter@11932248, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@2db618e3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64a2966a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3713ebe9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27cd156a, org.springframework.security.web.access.ExceptionTranslationFilter@6ec3c680, org.springframework.security.web.access.intercept.AuthorizationFilter@155ab4b]
2024-07-18 15:54:17 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 15:54:17 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 15:54:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 15:54:17 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 10.869 seconds (process running for 11.981)
2024-07-18 15:54:17 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 15:54:42 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 15:54:42 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 15:54:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 15:54:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 15:54:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 15:54:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6d293b41
2024-07-18 15:54:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@474172e5
2024-07-18 15:54:42 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 15:54:42 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2024-07-18 15:54:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 15:54:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 15:54:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@750afff1]
2024-07-18 15:54:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into categories (created_at,description,is_active,name,slug,updated_at) values (?,?,?,?,?,?)
2024-07-18 15:54:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 15:54:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@9 (truncated)...]
2024-07-18 15:54:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 15:55:01 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 15:55:01 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:55:01 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:55:01 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 15:55:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 15:55:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 15:55:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:00:02 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 9276 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:00:02 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:00:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:00:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:00:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 243 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 4 JPA repository interfaces.
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:00:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-07-18 16:00:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:00:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:00:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:00:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:00:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3567 ms
2024-07-18 16:00:05 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:00:06 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:00:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:00:07 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6212ea52
2024-07-18 16:00:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:00:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:00:11 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:00:11 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:00:11 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:00:11 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:00:12 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:00:12 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:00:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:00:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:00:13 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:00:13 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4df4f611, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@db62b5f, org.springframework.security.web.context.SecurityContextHolderFilter@1c7094eb, org.springframework.security.web.header.HeaderWriterFilter@60319a00, org.springframework.web.filter.CorsFilter@2616b618, org.springframework.security.web.authentication.logout.LogoutFilter@73c337e9, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@4cb3e76c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a6cab6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e6c69f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e6d2502, org.springframework.security.web.access.ExceptionTranslationFilter@dcdf733, org.springframework.security.web.access.intercept.AuthorizationFilter@6b732d6]
2024-07-18 16:00:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:00:13 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:00:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:00:14 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 12.572 seconds (process running for 13.876)
2024-07-18 16:00:14 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:00:43 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:00:43 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@407bfc49
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@b14a2c
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:00:43 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@3a449d16]
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into categories (created_at,description,name,slug,updated_at) values (?,?,?,?,?)
2024-07-18 16:00:43 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Field 'is_active' doesn't have a default value
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["could not execute statement [Field 'is_active' doesn't have a default value] [insert into categories (truncated)..."]
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.orm.jpa.JpaSystemException: could not execute statement [Field 'is_active' doesn't have a default value] [insert into categories (created_at,description,name,slug,updated_at) values (?,?,?,?,?)]]
2024-07-18 16:00:43 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:01:04 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:01:04 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:01:04 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:01:04 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:01:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:01:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:01:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:01:08 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 2208 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:01:08 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:01:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:01:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:01:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 243 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 4 JPA repository interfaces.
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:01:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-18 16:01:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:01:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:01:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:01:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:01:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3135 ms
2024-07-18 16:01:11 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:01:12 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:01:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:01:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52d9f36b
2024-07-18 16:01:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - create table categories (id integer not null auto_increment, created_at datetime(6), description varchar(255), name varchar(255) not null, slug varchar(255) not null, updated_at datetime(6), primary key (id)) engine=InnoDB
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - create table products (id integer not null auto_increment, brand varchar(255), create_at datetime(6), description varchar(255), name varchar(255), price float(23) not null, quantity integer not null, sku varchar(255), slug varchar(255), update_at datetime(6), category_id integer, primary key (id)) engine=InnoDB
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table categories drop index UKt8o6pivur7nn124jehx7cygw5
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table categories add constraint UKt8o6pivur7nn124jehx7cygw5 unique (name)
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table categories drop index UKoul14ho7bctbefv8jywp5v3i2
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table categories add constraint UKoul14ho7bctbefv8jywp5v3i2 unique (slug)
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table products drop index UKo61fmio5yukmmiqgnxf8pnavn
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKo61fmio5yukmmiqgnxf8pnavn unique (name)
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table products drop index UKostq1ec3toafnjok09y9l7dox
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKostq1ec3toafnjok09y9l7dox unique (slug)
2024-07-18 16:01:14 [main] DEBUG org.hibernate.SQL - alter table products add constraint FKog2rp4qthbtt2lfyhfo32lsw9 foreign key (category_id) references categories (id)
2024-07-18 16:01:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:01:16 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:01:16 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:01:16 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:01:16 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:01:17 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:01:17 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:01:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:01:18 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:01:18 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:01:18 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28908c04, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b9132ad, org.springframework.security.web.context.SecurityContextHolderFilter@39d8240b, org.springframework.security.web.header.HeaderWriterFilter@2a153531, org.springframework.web.filter.CorsFilter@31881aa2, org.springframework.security.web.authentication.logout.LogoutFilter@127e838b, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@4d5399f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35b799c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39badc71, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7adc8212, org.springframework.security.web.access.ExceptionTranslationFilter@2e6c69f, org.springframework.security.web.access.intercept.AuthorizationFilter@4cb3e76c]
2024-07-18 16:01:18 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:01:18 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:01:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:01:18 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.273 seconds (process running for 12.379)
2024-07-18 16:01:19 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:01:28 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:01:28 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@19a7e618
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7fb689fe
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:01:28 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/categories", parameters={}
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.CategoryController#addCategory(CategoryRequest)
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.CategoryRequest@2d2ad4f4]
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into categories (created_at,description,name,slug,updated_at) values (?,?,?,?,?)
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.CategoryResponse@2 (truncated)...]
2024-07-18 16:01:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@ba5c7ac]
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.ProductResponse> com.manage.userManagement.controller.ProductController.addProduct(com.manage.userManagement.dto.request.ProductRequest): HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Float'. Check configuration for 'price'
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' valid (truncated)..."]
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Float'. Check configuration for 'price']
2024-07-18 16:02:12 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@148b8e7]
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.ProductResponse> com.manage.userManagement.controller.ProductController.addProduct(com.manage.userManagement.dto.request.ProductRequest): HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Float'. Check configuration for 'price'
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' valid (truncated)..."]
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Float'. Check configuration for 'price']
2024-07-18 16:03:17 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/users", parameters={}
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.UserController#createUser(UserRequest)
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.UserRequest@2fe1a389]
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(MethodArgumentNotValidException)
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=304, message=Password must be at least 8 characters, result=null)]
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.UserResponse> com.manage.userManagement.controller.UserController.createUser(com.manage.userManagement.dto.request.UserRequest): [Field error in object 'userRequest' on field 'password': rejected value [123414]; codes [Size.userRequest.password,Size.password,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userRequest.password,password]; arguments []; default message [password],2147483647,8]; default message [INVALID_PASSWORD]] ]
2024-07-18 16:05:32 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@144a2976]
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.ProductResponse> com.manage.userManagement.controller.ProductController.addProduct(com.manage.userManagement.dto.request.ProductRequest): HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Float'. Check configuration for 'price'
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' valid (truncated)..."]
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Float'. Check configuration for 'price']
2024-07-18 16:06:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:09:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:09:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:09:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:09:40 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 14592 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:09:40 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:09:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:09:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 216 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 4 JPA repository interfaces.
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:09:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 16:09:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:09:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:09:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:09:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:09:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3178 ms
2024-07-18 16:09:43 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:09:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:09:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:09:45 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4682882a
2024-07-18 16:09:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:09:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:09:48 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:09:48 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:09:48 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:09:48 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:09:49 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:09:49 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:09:49 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:09:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:09:50 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:09:50 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7c7caff1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@460818c1, org.springframework.security.web.context.SecurityContextHolderFilter@5e744b4b, org.springframework.security.web.header.HeaderWriterFilter@7669fc90, org.springframework.web.filter.CorsFilter@6b2aafbc, org.springframework.security.web.authentication.logout.LogoutFilter@7d8fcde8, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@64a2966a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71897380, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21df2968, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3669d7ac, org.springframework.security.web.access.ExceptionTranslationFilter@351623d, org.springframework.security.web.access.intercept.AuthorizationFilter@5e1fc897]
2024-07-18 16:09:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:09:50 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:09:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:09:50 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 10.998 seconds (process running for 12.155)
2024-07-18 16:09:51 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:09:54 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:09:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@dcaa0e8
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@75f4c44c
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:09:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@14c24e85]
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.ProductResponse> com.manage.userManagement.controller.ProductController.addProduct(com.manage.userManagement.dto.request.ProductRequest): HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'quantity'
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' valid (truncated)..."]
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'quantity']
2024-07-18 16:09:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:11:24 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:11:24 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:11:24 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:11:24 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:11:24 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:11:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:11:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:11:30 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 12544 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:11:30 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 235 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:11:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 4 JPA repository interfaces.
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:11:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-07-18 16:11:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:11:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:11:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:11:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:11:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3238 ms
2024-07-18 16:11:33 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:11:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:11:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:11:34 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@71469e01
2024-07-18 16:11:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:11:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:11:38 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:11:38 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:11:38 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:11:38 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:11:39 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:11:39 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:11:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:11:39 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:11:39 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:11:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3564caf8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ce15aa, org.springframework.security.web.context.SecurityContextHolderFilter@378446f9, org.springframework.security.web.header.HeaderWriterFilter@42927b0a, org.springframework.web.filter.CorsFilter@5d2a86c0, org.springframework.security.web.authentication.logout.LogoutFilter@c04a1ca, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@7b78c40d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39badc71, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e32261f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3dabf112, org.springframework.security.web.access.ExceptionTranslationFilter@3963d003, org.springframework.security.web.access.intercept.AuthorizationFilter@636787fd]
2024-07-18 16:11:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:11:40 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:11:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:11:40 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.068 seconds (process running for 12.222)
2024-07-18 16:11:40 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:11:49 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:11:49 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3edd135d
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6499fda5
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:11:49 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@38a1b3bb]
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(MethodArgumentNotValidException)
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=320, message=Product slug existed, result=null)]
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.ProductResponse> com.manage.userManagement.controller.ProductController.addProduct(com.manage.userManagement.dto.request.ProductRequest) with 4 errors: [Field error in object 'productRequest' on field 'slug': rejected value [null]; codes [NotBlank.productRequest.slug,NotBlank.slug,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.slug,slug]; arguments []; default message [slug]]; default message [BLANK_PRODUCT_SLUG]] [Field error in object 'productRequest' on field 'categoryName': rejected value [null]; codes [NotBlank.productRequest.categoryName,NotBlank.categoryName,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.categoryName,categoryName]; arguments []; default message [categoryName]]; default message [BLANK_CATEGORY_NAME]] [Field error in object 'productRequest' on field 'name': rejected value [null]; codes [NotBlank.productRequest.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.name,name]; arguments []; default message [name]]; default message [BLANK_PRODUCT_NAME]] [Field error in object 'productRequest' on field 'sku': rejected value [null]; codes [NotBlank.productRequest.sku,NotBlank.sku,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.sku,sku]; arguments []; default message [sku]]; default message [BLANK_PRODUCT_SKU]] ]
2024-07-18 16:11:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@a9c1298]
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(MethodArgumentNotValidException)
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=321, message=Product sku existed, result=null)]
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.ProductResponse> com.manage.userManagement.controller.ProductController.addProduct(com.manage.userManagement.dto.request.ProductRequest) with 3 errors: [Field error in object 'productRequest' on field 'sku': rejected value [null]; codes [NotBlank.productRequest.sku,NotBlank.sku,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.sku,sku]; arguments []; default message [sku]]; default message [BLANK_PRODUCT_SKU]] [Field error in object 'productRequest' on field 'slug': rejected value [null]; codes [NotBlank.productRequest.slug,NotBlank.slug,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.slug,slug]; arguments []; default message [slug]]; default message [BLANK_PRODUCT_SLUG]] [Field error in object 'productRequest' on field 'categoryName': rejected value [null]; codes [NotBlank.productRequest.categoryName,NotBlank.categoryName,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.categoryName,categoryName]; arguments []; default message [categoryName]]; default message [BLANK_CATEGORY_NAME]] ]
2024-07-18 16:14:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@300e5a0c]
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(MethodArgumentNotValidException)
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=321, message=Product sku existed, result=null)]
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in com.manage.userManagement.dto.response.ApiResponse<com.manage.userManagement.dto.response.ProductResponse> com.manage.userManagement.controller.ProductController.addProduct(com.manage.userManagement.dto.request.ProductRequest) with 2 errors: [Field error in object 'productRequest' on field 'sku': rejected value [null]; codes [NotBlank.productRequest.sku,NotBlank.sku,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.sku,sku]; arguments []; default message [sku]]; default message [BLANK_PRODUCT_SKU]] [Field error in object 'productRequest' on field 'categoryName': rejected value [null]; codes [NotBlank.productRequest.categoryName,NotBlank.categoryName,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [productRequest.categoryName,categoryName]; arguments []; default message [categoryName]]; default message [BLANK_CATEGORY_NAME]] ]
2024-07-18 16:14:43 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@2d9478f1]
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingAppException(AppException)
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=327, message=Category is not existed, result=null)]
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.manage.userManagement.exception.AppException: Category is not existed]
2024-07-18 16:15:37 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:15:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:15:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:15:49 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@303e123f]
2024-07-18 16:15:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:15:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - insert into products (brand,category_id,create_at,description,name,price,quantity,sku,slug,update_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 16:15:49 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoSuchMethodError: 'boolean com.manage.userManagement.entity.Product.isActive()'
2024-07-18 16:15:49 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoSuchMethodError: 'boolean com.manage.userManagement.entity.Product.isActive()'] with root cause
java.lang.NoSuchMethodError: 'boolean com.manage.userManagement.entity.Product.isActive()'
	at com.manage.userManagement.mapper.ProductMapperImpl.toProductDocument(ProductMapperImpl.java:96)
	at com.manage.userManagement.service.ProductService.createProduct(ProductService.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.manage.userManagement.service.ProductService$$SpringCGLIB$$0.createProduct(<generated>)
	at com.manage.userManagement.controller.ProductController.addProduct(ProductController.java:22)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter.doFilterInternal(BearerTokenAuthenticationFilter.java:128)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 16:15:56 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@eb8b6d8]
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,create_at,description,name,price,quantity,sku,slug,update_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoSuchMethodError: 'boolean com.manage.userManagement.entity.Product.isActive()'
2024-07-18 16:16:19 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoSuchMethodError: 'boolean com.manage.userManagement.entity.Product.isActive()'] with root cause
java.lang.NoSuchMethodError: 'boolean com.manage.userManagement.entity.Product.isActive()'
	at com.manage.userManagement.mapper.ProductMapperImpl.toProductDocument(ProductMapperImpl.java:96)
	at com.manage.userManagement.service.ProductService.createProduct(ProductService.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.manage.userManagement.service.ProductService$$SpringCGLIB$$0.createProduct(<generated>)
	at com.manage.userManagement.controller.ProductController.addProduct(ProductController.java:22)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter.doFilterInternal(BearerTokenAuthenticationFilter.java:145)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Jul 18 16:16:19 GMT+07:00 2024, status=500, error=Internal Server Error, path=/produc (truncated)...]
2024-07-18 16:16:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2024-07-18 16:17:52 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:17:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:17:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:17:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:18:21 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 12596 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:18:21 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 259 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 4 JPA repository interfaces.
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:18:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-18 16:18:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:18:24 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:18:24 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:18:24 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:18:24 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3209 ms
2024-07-18 16:18:24 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:18:25 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:18:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:18:26 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66716959
2024-07-18 16:18:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:18:28 [main] DEBUG org.hibernate.SQL - alter table products add column created_at datetime(6)
2024-07-18 16:18:28 [main] DEBUG org.hibernate.SQL - alter table products add column updated_at datetime(6)
2024-07-18 16:18:28 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:18:30 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:18:30 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:18:30 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:18:30 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:18:30 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:18:31 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:18:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:18:31 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:18:31 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:18:31 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4f3f8115, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3713ebe9, org.springframework.security.web.context.SecurityContextHolderFilter@37e2873c, org.springframework.security.web.header.HeaderWriterFilter@71897380, org.springframework.web.filter.CorsFilter@3b57dba4, org.springframework.security.web.authentication.logout.LogoutFilter@78c7d992, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@506d7831, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@680aa303, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3aef4650, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c04a1ca, org.springframework.security.web.access.ExceptionTranslationFilter@5e744b4b, org.springframework.security.web.access.intercept.AuthorizationFilter@15f4f652]
2024-07-18 16:18:31 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:18:31 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:18:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:18:32 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.443 seconds (process running for 12.761)
2024-07-18 16:18:32 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:18:35 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:18:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7f5179be
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7e5e568e
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:18:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:18:35 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:18:36 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@18aa2d4a]
2024-07-18 16:18:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:18:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 16:18:37 [http-nio-8080-exec-1] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products/_doc/3?refresh=false] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:18:37 [http-nio-8080-exec-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:18:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:18:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@63 (truncated)...]
2024-07-18 16:18:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 16:19:08 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products/cau-be", parameters={}
2024-07-18 16:19:08 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getProduct(String)
2024-07-18 16:19:08 [http-nio-8080-exec-3] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_search?typed_keys=true&search_type=query_then_fetch] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:19:09 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:19:09 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@67 (truncated)...]
2024-07-18 16:19:09 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products", parameters={}
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getAll()
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select p1_0.id,p1_0.brand,p1_0.category_id,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.id=?
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Could not write JSON: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add  (truncated)..."]
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not write JSON: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["createdAt"])]
2024-07-18 16:19:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:20:38 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:20:38 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:20:38 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:20:38 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:20:38 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:20:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:20:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:20:46 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 8536 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:20:46 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:20:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:20:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:20:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:20:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:20:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:20:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 250 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 4 JPA repository interfaces.
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:20:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 16:20:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:20:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:20:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:20:49 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:20:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3297 ms
2024-07-18 16:20:49 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:20:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:20:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:20:51 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@649009d6
2024-07-18 16:20:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:20:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:20:54 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:20:54 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:20:54 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:20:54 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:20:55 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:20:55 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:20:55 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:20:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:20:55 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:20:56 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ea4e0f3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c9ecd9e, org.springframework.security.web.context.SecurityContextHolderFilter@79b07ccd, org.springframework.security.web.header.HeaderWriterFilter@7d8fcde8, org.springframework.web.filter.CorsFilter@6744707b, org.springframework.security.web.authentication.logout.LogoutFilter@72ce2982, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@28de7e2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78c7d992, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f19da2c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@276af32d, org.springframework.security.web.access.ExceptionTranslationFilter@7414167a, org.springframework.security.web.access.intercept.AuthorizationFilter@104861ff]
2024-07-18 16:20:56 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:20:56 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:20:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:20:56 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.293 seconds (process running for 12.424)
2024-07-18 16:20:56 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:21:00 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:21:00 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:21:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:21:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:21:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:21:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3532f633
2024-07-18 16:21:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6385b96c
2024-07-18 16:21:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:21:00 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products", parameters={}
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getAll()
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select p1_0.id,p1_0.brand,p1_0.category_id,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.id=?
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamW (truncated)..."]
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`) (through reference chain: com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0])]
2024-07-18 16:21:01 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products", parameters={}
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getAll()
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select p1_0.id,p1_0.brand,p1_0.category_id,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.id=?
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamW (truncated)..."]
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`) (through reference chain: com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0])]
2024-07-18 16:26:39 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:26:54 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:26:54 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:26:54 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:26:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:26:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:26:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:31:59 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 14572 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:31:59 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 306 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 4 JPA repository interfaces.
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:32:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 16:32:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:32:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:32:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:32:03 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:32:03 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3469 ms
2024-07-18 16:32:03 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:32:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:32:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:32:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7aa63f50
2024-07-18 16:32:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:32:06 [main] DEBUG org.hibernate.SQL - create table products (id integer not null auto_increment, brand varchar(255), created_at datetime(6), description varchar(255), name varchar(255), price float(23) not null, quantity integer not null, sku varchar(255), slug varchar(255), updated_at datetime(6), category_id integer, primary key (id)) engine=InnoDB
2024-07-18 16:32:06 [main] DEBUG org.hibernate.SQL - alter table products drop index UKo61fmio5yukmmiqgnxf8pnavn
2024-07-18 16:32:06 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKo61fmio5yukmmiqgnxf8pnavn unique (name)
2024-07-18 16:32:06 [main] DEBUG org.hibernate.SQL - alter table products drop index UKostq1ec3toafnjok09y9l7dox
2024-07-18 16:32:06 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKostq1ec3toafnjok09y9l7dox unique (slug)
2024-07-18 16:32:06 [main] DEBUG org.hibernate.SQL - alter table products add constraint FKog2rp4qthbtt2lfyhfo32lsw9 foreign key (category_id) references categories (id)
2024-07-18 16:32:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:32:08 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:32:08 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:32:08 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:32:08 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:32:09 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:32:10 [main] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:32:10 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:32:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:32:11 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:32:11 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:32:11 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2583418c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11fe6743, org.springframework.security.web.context.SecurityContextHolderFilter@1bdf7cd4, org.springframework.security.web.header.HeaderWriterFilter@2654f4aa, org.springframework.web.filter.CorsFilter@5fb5ad40, org.springframework.security.web.authentication.logout.LogoutFilter@5172cce4, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@67b920c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c1e569, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17f2e01d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f6fa2dd, org.springframework.security.web.access.ExceptionTranslationFilter@4835e10a, org.springframework.security.web.access.intercept.AuthorizationFilter@1fd2716f]
2024-07-18 16:32:11 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:32:11 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:32:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:32:12 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 13.24 seconds (process running for 14.635)
2024-07-18 16:32:12 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:32:27 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:32:27 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4d71deeb
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@661a018e
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:32:27 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@57a22449]
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:32:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 16:32:27 [http-nio-8080-exec-2] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products/_doc/1?refresh=false] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:32:28 [http-nio-8080-exec-2] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:32:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:32:28 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@66 (truncated)...]
2024-07-18 16:32:28 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 16:32:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products", parameters={}
2024-07-18 16:32:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getAll()
2024-07-18 16:32:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select p1_0.id,p1_0.brand,p1_0.category_id,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0
2024-07-18 16:32:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.id=?
2024-07-18 16:32:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 16:32:33 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:32:33 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:32:33 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamW (truncated)..."]
2024-07-18 16:32:33 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`) (through reference chain: com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0])]
2024-07-18 16:32:33 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:34:42 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:34:42 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:34:42 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:34:42 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:34:48 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 2628 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:34:48 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 251 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 4 JPA repository interfaces.
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:34:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:34:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:34:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:34:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:34:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:34:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:34:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:34:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2024-07-18 16:34:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:34:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:34:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:34:52 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:34:52 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3482 ms
2024-07-18 16:34:52 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:34:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:34:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:34:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37fffef3
2024-07-18 16:34:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:34:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:34:58 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:34:58 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:34:58 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:34:58 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:34:59 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:34:59 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:34:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:34:59 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:34:59 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:34:59 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@76300346, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@153f6a67, org.springframework.security.web.context.SecurityContextHolderFilter@351623d, org.springframework.security.web.header.HeaderWriterFilter@8dbe78f, org.springframework.web.filter.CorsFilter@49491770, org.springframework.security.web.authentication.logout.LogoutFilter@2158d1d1, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@46110b82, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7669fc90, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37e2873c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b3c2e59, org.springframework.security.web.access.ExceptionTranslationFilter@7a63c618, org.springframework.security.web.access.intercept.AuthorizationFilter@78c7d992]
2024-07-18 16:34:59 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:34:59 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:35:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:35:00 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 12.18 seconds (process running for 13.93)
2024-07-18 16:35:00 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:35:22 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:35:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@25e7e6d
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@762f5d34
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:35:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@ba4b998]
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:35:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 16:35:23 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry 'Cau be' for key 'products.UKo61fmio5yukmmiqgnxf8pnavn'
2024-07-18 16:35:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingAppException(AppException)
2024-07-18 16:35:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:35:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(code=324, message=Product name or slug existed, result=null)]
2024-07-18 16:35:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.manage.userManagement.exception.AppException: Product name or slug existed]
2024-07-18 16:35:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products", parameters={}
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getAll()
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select p1_0.id,p1_0.brand,p1_0.category_id,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.id=?
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamW (truncated)..."]
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`) (through reference chain: com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0])]
2024-07-18 16:35:27 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 16:37:09 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:37:09 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:37:09 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:37:09 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 16:37:09 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:37:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:37:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:37:13 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 14620 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:37:13 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 273 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 4 JPA repository interfaces.
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2024-07-18 16:37:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:37:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:37:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:37:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:37:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3827 ms
2024-07-18 16:37:17 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:37:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:37:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:37:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4ede8888
2024-07-18 16:37:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:37:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:37:23 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:37:23 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:37:23 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:37:23 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:37:23 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:37:24 [main] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:37:24 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:37:24 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:37:25 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:37:25 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:37:25 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ebdd981, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ecd22e7, org.springframework.security.web.context.SecurityContextHolderFilter@2461a62c, org.springframework.security.web.header.HeaderWriterFilter@762078dc, org.springframework.web.filter.CorsFilter@3d1c933, org.springframework.security.web.authentication.logout.LogoutFilter@1a57bb34, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@1290fc6a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47ccb397, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17f83573, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b2be6f8, org.springframework.security.web.access.ExceptionTranslationFilter@3746135b, org.springframework.security.web.access.intercept.AuthorizationFilter@1f146411]
2024-07-18 16:37:25 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:37:25 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:37:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:37:25 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 13.046 seconds (process running for 14.448)
2024-07-18 16:37:26 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:37:27 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 16:37:30 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 13176 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:37:30 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 280 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 4 JPA repository interfaces.
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:37:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-18 16:37:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:37:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:37:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:37:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:37:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3503 ms
2024-07-18 16:37:33 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:37:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:37:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:37:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@28db2afb
2024-07-18 16:37:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:37:37 [main] DEBUG org.hibernate.SQL - create table products (id integer not null auto_increment, brand varchar(255), created_at datetime(6), description varchar(255), name varchar(255), price float(23) not null, quantity integer not null, sku varchar(255), slug varchar(255), updated_at datetime(6), category_id integer, primary key (id)) engine=InnoDB
2024-07-18 16:37:37 [main] DEBUG org.hibernate.SQL - alter table products drop index UKo61fmio5yukmmiqgnxf8pnavn
2024-07-18 16:37:37 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKo61fmio5yukmmiqgnxf8pnavn unique (name)
2024-07-18 16:37:37 [main] DEBUG org.hibernate.SQL - alter table products drop index UKostq1ec3toafnjok09y9l7dox
2024-07-18 16:37:37 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKostq1ec3toafnjok09y9l7dox unique (slug)
2024-07-18 16:37:37 [main] DEBUG org.hibernate.SQL - alter table products add constraint FKog2rp4qthbtt2lfyhfo32lsw9 foreign key (category_id) references categories (id)
2024-07-18 16:37:37 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:37:39 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:37:39 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:37:39 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:37:39 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:37:39 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:37:39 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:37:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:37:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:37:40 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:37:40 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@153f6a67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b3c2e59, org.springframework.security.web.context.SecurityContextHolderFilter@54610a47, org.springframework.security.web.header.HeaderWriterFilter@735a3e0d, org.springframework.web.filter.CorsFilter@7cf8f45a, org.springframework.security.web.authentication.logout.LogoutFilter@72238cf0, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@6b732d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a538180, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@dcdf733, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64a2966a, org.springframework.security.web.access.ExceptionTranslationFilter@10009505, org.springframework.security.web.access.intercept.AuthorizationFilter@35f011cf]
2024-07-18 16:37:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:37:40 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:37:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:37:40 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.232 seconds (process running for 12.507)
2024-07-18 16:37:41 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:37:52 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:37:52 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@276961df
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@bfd7235
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:37:52 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@397e3d2d]
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:37:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 16:37:52 [http-nio-8080-exec-2] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products/_doc/1?refresh=false] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:37:53 [http-nio-8080-exec-2] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:37:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:37:53 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@4a (truncated)...]
2024-07-18 16:37:53 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 16:38:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:38:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 16:38:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 16:56:15 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 11024 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 16:56:15 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 298 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 4 JPA repository interfaces.
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 16:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 16:56:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 16:56:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 16:56:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 16:56:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 16:56:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3291 ms
2024-07-18 16:56:19 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 16:56:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 16:56:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 16:56:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@705d914f
2024-07-18 16:56:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 16:56:22 [main] DEBUG org.hibernate.SQL - create table products (id integer not null auto_increment, brand varchar(255), created_at datetime(6), description varchar(255), name varchar(255), price float(23) not null, quantity integer not null, sku varchar(255), slug varchar(255), updated_at datetime(6), category_id integer, primary key (id)) engine=InnoDB
2024-07-18 16:56:22 [main] DEBUG org.hibernate.SQL - alter table products drop index UKo61fmio5yukmmiqgnxf8pnavn
2024-07-18 16:56:22 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKo61fmio5yukmmiqgnxf8pnavn unique (name)
2024-07-18 16:56:22 [main] DEBUG org.hibernate.SQL - alter table products drop index UKostq1ec3toafnjok09y9l7dox
2024-07-18 16:56:22 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKostq1ec3toafnjok09y9l7dox unique (slug)
2024-07-18 16:56:22 [main] DEBUG org.hibernate.SQL - alter table products add constraint FKog2rp4qthbtt2lfyhfo32lsw9 foreign key (category_id) references categories (id)
2024-07-18 16:56:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 16:56:24 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 16:56:24 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 16:56:24 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 16:56:24 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 16:56:25 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:56:26 [main] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:56:26 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:56:26 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 16:56:26 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 16:56:27 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 16:56:27 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@46d393cd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f456711, org.springframework.security.web.context.SecurityContextHolderFilter@44d83a12, org.springframework.security.web.header.HeaderWriterFilter@70e966a5, org.springframework.web.filter.CorsFilter@582a3b19, org.springframework.security.web.authentication.logout.LogoutFilter@184e7447, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@237a41ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18ab9b9e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f5faa89, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e41aabf, org.springframework.security.web.access.ExceptionTranslationFilter@17f2e01d, org.springframework.security.web.access.intercept.AuthorizationFilter@67b920c9]
2024-07-18 16:56:27 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 16:56:27 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 16:56:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 16:56:27 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 12.841 seconds (process running for 14.058)
2024-07-18 16:56:27 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 16:56:37 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 16:56:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@21471ca8
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@17a17af5
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 16:56:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@78d7b823]
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 16:56:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 16:56:38 [http-nio-8080-exec-1] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products/_doc/1?refresh=false] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:56:38 [http-nio-8080-exec-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 16:56:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 16:56:38 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@2b (truncated)...]
2024-07-18 16:56:38 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products", parameters={}
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getAll()
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select p1_0.id,p1_0.brand,p1_0.category_id,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.id=?
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamW (truncated)..."]
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`) (through reference chain: com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0]->com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category["products"]->org.hibernate.collection.spi.PersistentBag[0])]
2024-07-18 16:57:06 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 17:01:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:01:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 17:01:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 17:01:58 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 4524 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 17:01:58 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 249 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 4 JPA repository interfaces.
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:02:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2024-07-18 17:02:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 17:02:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 17:02:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 17:02:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 17:02:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3795 ms
2024-07-18 17:02:02 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 17:02:03 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 17:02:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 17:02:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e2d65e1
2024-07-18 17:02:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 17:02:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:02:08 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 17:02:08 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 17:02:08 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 17:02:08 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 17:02:09 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:02:09 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:02:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 17:02:09 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 17:02:10 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 17:02:10 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c00b341, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10658b31, org.springframework.security.web.context.SecurityContextHolderFilter@2e6c69f, org.springframework.security.web.header.HeaderWriterFilter@1a8b10dd, org.springframework.web.filter.CorsFilter@5c59a0f7, org.springframework.security.web.authentication.logout.LogoutFilter@6b732d6, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@78835956, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a153531, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42927b0a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72ce2982, org.springframework.security.web.access.ExceptionTranslationFilter@25eadfe6, org.springframework.security.web.access.intercept.AuthorizationFilter@497746ea]
2024-07-18 17:02:10 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 17:02:10 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 17:02:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 17:02:10 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 13.091 seconds (process running for 14.297)
2024-07-18 17:02:11 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 17:02:29 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 17:02:29 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@58a01e47
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2c952e6
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 17:02:29 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@bbbc1e8]
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 17:02:29 [http-nio-8080-exec-3] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products/_doc/2?refresh=false] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:02:29 [http-nio-8080-exec-3] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 17:02:29 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@23 (truncated)...]
2024-07-18 17:02:30 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 17:04:45 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 17:04:45 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:04:45 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:04:45 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:04:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:04:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 17:04:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 17:15:14 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 2100 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 17:15:14 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 17:15:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:15:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:15:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 301 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 4 JPA repository interfaces.
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:15:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 17:15:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 17:15:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 17:15:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 17:15:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 17:15:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3627 ms
2024-07-18 17:15:18 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 17:15:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 17:15:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 17:15:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6bc62bb9
2024-07-18 17:15:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 17:15:23 [main] DEBUG org.hibernate.SQL - create table products (id integer not null auto_increment, brand varchar(255), created_at datetime(6), description varchar(255), name varchar(255), price float(23) not null, quantity integer not null, sku varchar(255), slug varchar(255), updated_at datetime(6), category_id integer, primary key (id)) engine=InnoDB
2024-07-18 17:15:23 [main] DEBUG org.hibernate.SQL - alter table products drop index UKo61fmio5yukmmiqgnxf8pnavn
2024-07-18 17:15:23 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKo61fmio5yukmmiqgnxf8pnavn unique (name)
2024-07-18 17:15:23 [main] DEBUG org.hibernate.SQL - alter table products drop index UKostq1ec3toafnjok09y9l7dox
2024-07-18 17:15:23 [main] DEBUG org.hibernate.SQL - alter table products add constraint UKostq1ec3toafnjok09y9l7dox unique (slug)
2024-07-18 17:15:23 [main] DEBUG org.hibernate.SQL - alter table products add constraint FKog2rp4qthbtt2lfyhfo32lsw9 foreign key (category_id) references categories (id)
2024-07-18 17:15:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:15:25 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 17:15:25 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 17:15:25 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 17:15:25 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 17:15:26 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:15:28 [main] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:15:28 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:15:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 17:15:28 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 17:15:28 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 17:15:28 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@b7a2b89, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@442bb11b, org.springframework.security.web.context.SecurityContextHolderFilter@7f14bdd1, org.springframework.security.web.header.HeaderWriterFilter@22e94cf2, org.springframework.web.filter.CorsFilter@4d81e83a, org.springframework.security.web.authentication.logout.LogoutFilter@17f83573, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@5c176a0f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a9c923f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d2d04ef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@238bec83, org.springframework.security.web.access.ExceptionTranslationFilter@49924fc6, org.springframework.security.web.access.intercept.AuthorizationFilter@1c63d92e]
2024-07-18 17:15:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 17:15:29 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 17:15:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 17:15:29 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 15.295 seconds (process running for 17.263)
2024-07-18 17:15:29 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 17:15:33 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 17:15:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@42ca6733
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5dc83abb
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 17:15:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@268c8c26]
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["java.lang.StackOverflowError"]
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: java.lang.StackOverflowError]
2024-07-18 17:15:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 17:16:03 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 17:16:03 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:16:03 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:16:03 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:16:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:16:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 17:16:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 17:16:10 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 12260 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 17:16:10 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 232 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 145 ms. Found 4 JPA repository interfaces.
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 17:16:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 17:16:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 17:16:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 17:16:14 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 17:16:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3700 ms
2024-07-18 17:16:14 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 17:16:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 17:16:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 17:16:15 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f2ae973
2024-07-18 17:16:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 17:16:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:16:19 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 17:16:19 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 17:16:19 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 17:16:19 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 17:16:20 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:16:20 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:16:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 17:16:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 17:16:21 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 17:16:21 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@652a16a8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b78c40d, org.springframework.security.web.context.SecurityContextHolderFilter@42927b0a, org.springframework.security.web.header.HeaderWriterFilter@35b799c0, org.springframework.web.filter.CorsFilter@65bd19bf, org.springframework.security.web.authentication.logout.LogoutFilter@497746ea, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@6b50017c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ca6a1a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22351330, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@104861ff, org.springframework.security.web.access.ExceptionTranslationFilter@39d8240b, org.springframework.security.web.access.intercept.AuthorizationFilter@26be5ee]
2024-07-18 17:16:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 17:16:21 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 17:16:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 17:16:21 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 12.295 seconds (process running for 13.474)
2024-07-18 17:16:22 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 17:16:33 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 17:16:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@700f356b
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@725d3fcc
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 17:16:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@6514328a]
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 17:16:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 17:16:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 17:16:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 17:16:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["java.lang.StackOverflowError"]
2024-07-18 17:16:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: java.lang.StackOverflowError]
2024-07-18 17:16:34 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 17:24:04 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 17:24:04 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:24:04 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:24:04 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 17:24:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:24:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 17:24:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 17:24:11 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 10900 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 17:24:11 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 231 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 4 JPA repository interfaces.
2024-07-18 17:24:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 17:24:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-18 17:24:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 17:24:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 17:24:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 17:24:14 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 17:24:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3305 ms
2024-07-18 17:24:14 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 17:24:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 17:24:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 17:24:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c6bf8d9
2024-07-18 17:24:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 17:24:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:24:19 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 17:24:19 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 17:24:19 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 17:24:19 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 17:24:20 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:24:20 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 17:24:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 17:24:20 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 17:24:20 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 17:24:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7f37f6b6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4cb3e76c, org.springframework.security.web.context.SecurityContextHolderFilter@60319a00, org.springframework.security.web.header.HeaderWriterFilter@37e2873c, org.springframework.web.filter.CorsFilter@736b21ee, org.springframework.security.web.authentication.logout.LogoutFilter@2d198533, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@3713ebe9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21df2968, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a8b10dd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64d711b0, org.springframework.security.web.access.ExceptionTranslationFilter@2919976e, org.springframework.security.web.access.intercept.AuthorizationFilter@6ec3c680]
2024-07-18 17:24:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 17:24:21 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 17:24:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 17:24:21 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 11.099 seconds (process running for 12.302)
2024-07-18 17:24:21 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 17:24:30 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 17:24:30 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3413effc
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@cd7871e
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 17:24:30 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 17:24:30 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@1393292b]
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select p1_0.category_id,p1_0.id,p1_0.brand,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0 where p1_0.category_id=?
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["java.lang.StackOverflowError"]
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: java.lang.StackOverflowError]
2024-07-18 17:24:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 17:47:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 17:47:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 17:47:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 18:07:07 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 9712 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 18:07:07 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 253 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 4 JPA repository interfaces.
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:07:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-18 18:07:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 18:07:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 18:07:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 18:07:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 18:07:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3542 ms
2024-07-18 18:07:11 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 18:07:12 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 18:07:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 18:07:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@306c9b2c
2024-07-18 18:07:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 18:07:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 18:07:17 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 18:07:17 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 18:07:17 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 18:07:17 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 18:07:19 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:07:19 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:07:19 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 18:07:19 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 18:07:19 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 18:07:19 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@64d711b0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df4f611, org.springframework.security.web.context.SecurityContextHolderFilter@21df2968, org.springframework.security.web.header.HeaderWriterFilter@680aa303, org.springframework.web.filter.CorsFilter@38811103, org.springframework.security.web.authentication.logout.LogoutFilter@5e1fc897, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@7f37f6b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70fdecff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29f0e941, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@db62b5f, org.springframework.security.web.access.ExceptionTranslationFilter@37e2873c, org.springframework.security.web.access.intercept.AuthorizationFilter@46110b82]
2024-07-18 18:07:20 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 18:07:20 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 18:07:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 18:07:20 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 13.517 seconds (process running for 14.761)
2024-07-18 18:07:20 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 18:07:32 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 18:07:32 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 18:07:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 18:07:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 18:07:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 18:07:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3413effc
2024-07-18 18:07:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@cd7871e
2024-07-18 18:07:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 18:07:32 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-07-18 18:07:37 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 18:07:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 18:07:37 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 18:07:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 18:07:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 18:07:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 18:07:38 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 18:07:38 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 18:07:38 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 18:07:49 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 18:07:49 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 18:07:50 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@4ebe9ffa]
2024-07-18 18:07:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 18:07:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 18:07:51 [http-nio-8080-exec-4] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products/_doc/4?refresh=false] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:07:52 [http-nio-8080-exec-4] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:07:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 18:07:52 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@3d (truncated)...]
2024-07-18 18:07:52 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 18:12:48 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 18:12:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 18:12:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-18 18:12:54 [main] INFO  c.m.u.UserManagementApplication - Starting UserManagementApplication using Java 17.0.10 with PID 11412 (C:\Users\Boot10\Downloads\user\target\classes started by Boot10 in C:\Users\Boot10\Downloads\user)
2024-07-18 18:12:54 [main] INFO  c.m.u.UserManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 228 ms. Found 2 Elasticsearch repository interfaces.
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 4 JPA repository interfaces.
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserElasticRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.manage.userManagement.repository.ValidTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-18 18:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-18 18:12:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-18 18:12:58 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-18 18:12:58 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-18 18:12:58 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-18 18:12:58 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3220 ms
2024-07-18 18:12:58 [main] DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2024-07-18 18:12:59 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-18 18:12:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-18 18:12:59 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44392e64
2024-07-18 18:12:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-18 18:13:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 18:13:03 [main] INFO  c.m.u.service.MailSenderService - STREAM - Redis group already exists, skipping Redis group creation: EMAIL_GROUP
2024-07-18 18:13:03 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer1
2024-07-18 18:13:03 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer2
2024-07-18 18:13:03 [main] INFO  c.m.u.service.MailSenderService - create consumer consumer3
2024-07-18 18:13:04 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/products] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:13:04 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/users] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:13:04 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-18 18:13:04 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 24 mappings in 'requestMappingHandlerMapping'
2024-07-18 18:13:04 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-18 18:13:04 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@460818c1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3669d7ac, org.springframework.security.web.context.SecurityContextHolderFilter@6740b169, org.springframework.security.web.header.HeaderWriterFilter@a538180, org.springframework.web.filter.CorsFilter@736b21ee, org.springframework.security.web.authentication.logout.LogoutFilter@12620e98, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@127e838b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2919976e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c7094eb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@506d7831, org.springframework.security.web.access.ExceptionTranslationFilter@54610a47, org.springframework.security.web.access.intercept.AuthorizationFilter@73c337e9]
2024-07-18 18:13:04 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-18 18:13:04 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-18 18:13:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-07-18 18:13:05 [main] INFO  c.m.u.UserManagementApplication - Started UserManagementApplication in 10.893 seconds (process running for 12.099)
2024-07-18 18:13:05 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 18:13:16 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-18 18:13:16 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@58d291c1
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6cf50207
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-18 18:13:16 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/products", parameters={}
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#addProduct(ProductRequest)
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.manage.userManagement.dto.request.ProductRequest@3777b9f6]
2024-07-18 18:13:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.name=?
2024-07-18 18:13:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into products (brand,category_id,created_at,description,name,price,quantity,sku,slug,updated_at) values (?,?,?,?,?,?,?,?,?,?)
2024-07-18 18:13:17 [http-nio-8080-exec-2] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/products/_doc/5?refresh=false] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:13:17 [http-nio-8080-exec-2] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/products/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.22-38e9ca2e81304a821c50862dafab089ca863944b "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2024-07-18 18:13:17 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 18:13:17 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=com.manage.userManagement.dto.response.ProductResponse@3a (truncated)...]
2024-07-18 18:13:17 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/refresh-token", parameters={}
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.AuthenticationController#refreshToken(RefreshRequest)
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest(refreshToken=a97ca977-2221-4e4a-980d-6288873be5e3)]
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select vt1_0.id,vt1_0.expiry_time_refresh,vt1_0.refresh_token,vt1_0.token from tokens vt1_0 where vt1_0.refresh_token=?
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.address,u1_0.dob,u1_0.email,u1_0.gender,u1_0.name,u1_0.number,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=?
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - update tokens set expiry_time_refresh=?,refresh_token=?,token=? where id=?
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(code=300, message=null, result=TokenResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1p (truncated)...]
2024-07-18 18:24:23 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2024-07-18 18:24:35 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/products", parameters={}
2024-07-18 18:24:35 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.manage.userManagement.controller.ProductController#getAll()
2024-07-18 18:24:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select p1_0.id,p1_0.brand,p1_0.category_id,p1_0.created_at,p1_0.description,p1_0.name,p1_0.price,p1_0.quantity,p1_0.sku,p1_0.slug,p1_0.updated_at from products p1_0
2024-07-18 18:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.created_at,c1_0.description,c1_0.name,c1_0.slug,c1_0.updated_at from categories c1_0 where c1_0.id=?
2024-07-18 18:24:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.manage.userManagement.exception.GlobalExceptionHandler#handlingRuntimeException(RuntimeException)
2024-07-18 18:24:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-18 18:24:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Could not write JSON: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add  (truncated)..."]
2024-07-18 18:24:36 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not write JSON: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.manage.userManagement.entity.Product["category"]->com.manage.userManagement.entity.Category$HibernateProxy$knUzhahX["createdAt"])]
2024-07-18 18:24:36 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2024-07-18 18:25:45 [SpringApplicationShutdownHook] WARN  o.s.d.r.c.l.LettucePoolingConnectionProvider - LettucePoolingConnectionProvider contains unreleased connections
2024-07-18 18:25:45 [SimpleAsyncTaskExecutor-1] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 18:25:45 [SimpleAsyncTaskExecutor-2] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 18:25:45 [SimpleAsyncTaskExecutor-3] ERROR o.s.d.r.s.DefaultStreamMessageListenerContainer$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisSystemException: Redis exception
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:72)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:40)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:38)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:310)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1022)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$3(LettuceConnection.java:447)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:673)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$DefaultManyInvocationSpec.toList(LettuceInvoker.java:618)
	at org.springframework.data.redis.connection.lettuce.LettuceStreamCommands.xReadGroup(LettuceStreamCommands.java:282)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$3(DefaultStreamMessageListenerContainer.java:236)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:350)
	at org.springframework.data.redis.stream.DefaultStreamMessageListenerContainer.lambda$getReadFunction$4(DefaultStreamMessageListenerContainer.java:235)
	at org.springframework.data.redis.stream.StreamPollTask.readRecords(StreamPollTask.java:146)
	at org.springframework.data.redis.stream.StreamPollTask.doLoop(StreamPollTask.java:127)
	at org.springframework.data.redis.stream.StreamPollTask.run(StreamPollTask.java:112)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.lettuce.core.RedisException: Connection closed
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$7(DefaultEndpoint.java:673)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.getNullable(DefaultEndpoint.java:1182)
	at io.lettuce.core.protocol.DefaultEndpoint$Lazy.get(DefaultEndpoint.java:1167)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyDrainQueuedCommands$8(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.DefaultEndpoint.cancelCommands(DefaultEndpoint.java:797)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyDrainQueuedCommands(DefaultEndpoint.java:674)
	at io.lettuce.core.protocol.CommandHandler.channelInactive(CommandHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.protocol.RedisHandshakeHandler.channelInactive(RedisHandshakeHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
	at io.lettuce.core.ChannelGroupListener.channelInactive(ChannelGroupListener.java:69)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1402)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:900)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-07-18 18:25:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-18 18:25:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-18 18:25:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
